import axios from "axios";
import React, { useState, useEffect } from "react";
import { Link } from "react-router-dom";
import logo from "../img/Home_logo.png"
import jdColorCode from "../data/jdColorCode.json";
import { FaChevronLeft, FaLocationArrow } from "react-icons/fa";
import Candidate_JundangInfo from "./Candidate_JundangInfo";

function Candidate(props){
    const [newsList, setNewsList] = useState([]);
    const [newsUpdateTime, setNewsUpdateTime] = useState('');

    useEffect(()=>{
        if(props.sgId == "" ||  props.sgType == "" || props.region1 == "" || props.region2 == ""){
            setNewsUpdateTime("");
            setNewsList([]);
        }else{
            axios.get(`/api/rss/${props.huboInfos.name[0]}`)
            .then(response => {
                props.setHuboNewsData(response.data);    
                let time = new String(
                    response.data.lastBuildDate[0].slice(5, 7) + "/" +
                    response.data.lastBuildDate[0].slice(8, 11) + "/" +
                    response.data.lastBuildDate[0].slice(12, 16) + "(" +
                    response.data.lastBuildDate[0].slice(0,3).toUpperCase() + ") " +
                    ((parseInt(response.data.lastBuildDate[0].slice(16,19))+9)%24) +
                    response.data.lastBuildDate[0].slice(19,26) + "ÏóÖÎç∞Ïù¥Ìä∏(KST)"
                )
                setNewsUpdateTime(time);
                setNewsList(response.data.item);
            })
        }
    }, [])
    if(props.sgId == "" ||  props.sgType == "" || props.region1 == "" || props.region2 == ""){
        return(
            <section className="Error">
                <span>Ï£ÑÏÜ°Ìï©ÎãàÎã§.</span>
                <span>Îç∞Ïù¥ÌÑ∞Í∞Ä Ï¥àÍ∏∞ÌôîÎêòÏóàÍ±∞ÎÇò, ÏûòÎ™ªÎêòÏóàÏäµÎãàÎã§.</span>
                <span>ÏïÑÎûòÏùò ÌôàÎ≤ÑÌäºÏùÑ ÎàåÎü¨, ÌôàÏóêÏÑú Îã§Ïãú ÏöîÏ≤≠Ìï¥Ï£ºÏÑ∏Ïöî.</span>
                <div>
                    <Link to={'/'}>
                        <img src={ logo } alt="logo"/>
                        <span>üëÜüèªÌÅ¥Î¶≠!</span>
                    </Link>
                </div>
            </section>
        )
    }else{
        return(
            <section className="Candidate">
                <header>
                    <section className="Candidate_mainHeader">
                        <Link to={'/candidates'}>
                            <FaChevronLeft />
                        </Link>
                        <div>
                            <h2>{props.huboInfos.name[0]}</h2>
                            <p>
                                {
                                    "giho" in props.huboInfos?
                                    "Í∏∞Ìò∏ " + props.huboInfos.giho[0] + "Î≤à ":
                                    "ÏòàÎπÑ ÌõÑÎ≥¥Ïûê"
                                }
                            </p>
                        </div>
                        <Link to={'/'}>
                            <img src={ logo } alt="logo"/>
                            <span>ÌôàÏúºÎ°ú</span>
                        </Link>
                    </section>
                    <section className="Candidate_subHeader">
                        <h3>
                            {
                                props.sgId.slice(0, 4) + "ÎÖÑ " + 
                                props.sgId.slice(4, 6) + "Ïõî " +
                                props.sgId.slice(6) + "Ïùº "
                            }
                            {props.sgName=="ÎåÄÌÜµÎ†πÏÑ†Í±∞"?props.sgName+"üá∞üá∑":props.sgName}
                        </h3>
                        <div>
                            <FaLocationArrow />
                            <h4>{props.region2}</h4>
                        </div>
                    </section>
                </header>
                <hr />
                <section className="Candidate_huboInfo">
                    <ul>
                        <h3>[ÌõÑÎ≥¥Ïûê Ï†ïÎ≥¥]</h3>
                        <li>
                            <div className="Candidate_huboInfo_class">ÌõÑÎ≥¥Ïù¥Î¶Ñ</div>
                            <div className="Candidate_huboInfo_content">
                                {props.huboInfos.name[0] + "[" + props.huboInfos.hanjaName[0] + "]"}
                            </div>
                        </li>
                        <li>
                            <div className="Candidate_huboInfo_class">ÏÜåÏÜç</div>
                            <div className={"Candidate_huboInfo_content Candidate_huboInfo_JD"}>
                                <div className="Candidate_huboInfo_JD_color" style={props.huboInfos.jdName[0] in jdColorCode?{ "backgroundColor" : jdColorCode[props.huboInfos.jdName[0]]}:{"backgroundColor" : "gray"}}></div>
                                <div>{props.huboInfos.jdName[0]}</div>
                            </div>
                        </li>
                        <li>
                            <div className="Candidate_huboInfo_class">ÏÑ†Í±∞Íµ¨Î™Ö</div>
                            <div className="Candidate_huboInfo_content">
                                {props.huboInfos.sggName[0]}
                            </div>
                        </li>
                        <li>
                            <div className="Candidate_huboInfo_class">Ïã†ÏÉÅÏ†ïÎ≥¥</div>
                            <div className="Candidate_huboInfo_content">
                                ÏÉùÎÖÑÏõîÏùº : {props.huboInfos.birthday[0].slice(0,4)+"ÎÖÑ "+props.huboInfos.birthday[0].slice(4,6)+"Ïõî "+props.huboInfos.birthday[0].slice(6,8)+"Ïùº "}(Îßå {props.huboInfos.age[0]}ÏÑ∏)
                            </div>
                            <div className="Candidate_huboInfo_content">
                                ÏÑ±Î≥Ñ : {props.huboInfos.gender[0]}
                            </div>
                            <div className="Candidate_huboInfo_content">
                                Ï£ºÏÜå : {props.huboInfos.addr[0]}
                            </div>
                            <div className="Candidate_huboInfo_content">
                                ÏßÅÏóÖ : {props.huboInfos.job[0]}
                            </div>
                            <div className="Candidate_huboInfo_content">
                                ÌïôÎ†• : {props.huboInfos.edu[0]}
                            </div>
                        </li>
                        <li>
                            <div className="Candidate_huboInfo_class">Í≤ΩÎ†•ÏÇ¨Ìï≠</div>
                            <div className="Candidate_huboInfo_content">
                                <ul>
                                    <li>
                                        {props.huboInfos.career1[0]}
                                    </li>
                                    <li>
                                        {props.huboInfos.career2[0]}
                                    </li>
                                </ul>
                            </div>
                        </li>
                    </ul>
                    <hr />
                    <ul>
                        <h3>[ÌõÑÎ≥¥Ïûê Í≥µÏïΩ]</h3>
                        {   
                            props.huboPromises.map((value) => {
                                return(
                                    <li>
                                        <div className="Candidate_huboinfo_promise">
                                            <h4>{value[0] + ". " + value[2]}</h4>
                                            <p>{"üè∑ " + value[1]}</p>
                                            {value[3][0].split('\n').map(line => {
                                                return(
                                                    <span>
                                                        {line}
                                                        <br />
                                                    </span>
                                                )
                                            })}
                                        </div>
                                    </li>
                                )

                            })
                        }
                    </ul>
                </section>
                <hr />
                <Candidate_JundangInfo {...props}/>
                <section className="Candidate_huboArticle">
                    <ul>
                        <h3>[ÌõÑÎ≥¥Ïûê Í¥ÄÎ†® Í∏∞ÏÇ¨]</h3>
                        <span>
                            { newsUpdateTime }
                        </span>
                        {
                            newsList.slice(0,30).map(news => {
                                return(
                                    <li key={news.link[0]} className="Candidate_huboArticle_news">
                                        <a href={news.link[0]} target="_blank">{news.title[0]}</a>
                                    </li>
                                )
                            })
                        }
                        <p>...from. Goole Newsüì∞</p>
                    </ul>
                </section>
                <hr />
            </section>
        )
    }
}

export default Candidate;